[1/10] Performing build step for 'bootloader'
[1/1] C:\Windows\system32\cmd.exe /C "cd /D C:\ESP32\uart_events\build\bootloader\esp-idf\esptool_py && C:\ESP32\Espressif\python_env\idf5.4_py3.11_env\Scripts\python.exe C:/ESP32/Espressif/frameworks/esp-idf-v5.4.1/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 C:/ESP32/uart_events/build/bootloader/bootloader.bin"
Bootloader binary size 0x6580 bytes. 0xa80 bytes (9%) free.
[2/10] No install step for 'bootloader'
[3/10] Completed 'bootloader'
[4/10] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/uart_events_example_main.c.obj
[5/10] Linking C static library esp-idf\main\libmain.a
[6/10] Generating ld/sections.ld
[7/10] Linking CXX executable uart_events.elf
[8/10] Generating binary image from built executable
esptool.py v4.8.1
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated C:/ESP32/uart_events/build/uart_events.bin
[9/10] C:\Windows\system32\cmd.exe /C "cd /D C:\ESP32\uart_events\build\esp-idf\esptool_py && C:\ESP32\Espressif\python_env\idf5.4_py3.11_env\Scripts\python.exe C:/ESP32/Espressif/frameworks/esp-idf-v5.4.1/components/partition_table/check_sizes.py --offset 0x8000 partition --type app C:/ESP32/uart_events/build/partition_table/partition-table.bin C:/ESP32/uart_events/build/uart_events.bin"
uart_events.bin binary size 0x30e30 bytes. Smallest app partition is 0x100000 bytes. 0xcf1d0 bytes (81%) free.
[9/10] C:\Windows\system32\cmd.exe /C "cd /D C:\ESP32\Espressif\frameworks\esp-idf-v5.4.1\components\esptool_py && C:\ESP32\Espressif\tools\cmake\3.30.2\bin\cmake.exe -D IDF_PATH=C:/ESP32/Espressif/frameworks/esp-idf-v5.4.1 -D SERIAL_TOOL=C:/ESP32/Espressif/python_env/idf5.4_py3.11_env/Scripts/python.exe;;C:/ESP32/Espressif/frameworks/esp-idf-v5.4.1/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=C:/ESP32/uart_events/build -P C:/ESP32/Espressif/frameworks/esp-idf-v5.4.1/components/esptool_py/run_serial_tool.cmake"
esptool.py --chip esp32 -p COM8 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 4MB 0x1000 bootloader/bootloader.bin 0x10000 uart_events.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.8.1
Serial port COM8

A fatal error occurred: Could not open COM8, the port is busy or doesn't exist.
(could not open port 'COM8': PermissionError(13, 'Access is denied.', None, 5))

Hint: Check if the port is not used by another task

FAILED: CMakeFiles/flash C:/ESP32/uart_events/build/CMakeFiles/flash 
C:\Windows\system32\cmd.exe /C "cd /D C:\ESP32\Espressif\frameworks\esp-idf-v5.4.1\components\esptool_py && C:\ESP32\Espressif\tools\cmake\3.30.2\bin\cmake.exe -D IDF_PATH=C:/ESP32/Espressif/frameworks/esp-idf-v5.4.1 -D SERIAL_TOOL=C:/ESP32/Espressif/python_env/idf5.4_py3.11_env/Scripts/python.exe;;C:/ESP32/Espressif/frameworks/esp-idf-v5.4.1/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=C:/ESP32/uart_events/build -P C:/ESP32/Espressif/frameworks/esp-idf-v5.4.1/components/esptool_py/run_serial_tool.cmake"
ninja: build stopped: subcommand failed.
